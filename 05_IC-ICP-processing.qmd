---
title: "05_IC-ICP-processing"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Setup

Clear the environment

```{r}
rm(list=ls())
```

### Load libraries

```{r}
library(tidyverse)
```

### Load data

```{r}
ic <- readxl::read_excel(
  "data/IC-ICP/IC-ICP-data-cleaned.xlsx", sheet = 1,
  col_types = c("guess", "numeric", "numeric", "numeric",
                "numeric","numeric","numeric","numeric"))

ic.loq <- readxl::read_excel(
  "data/IC-ICP/IC-ICP-data-cleaned.xlsx", sheet = 2,
  col_types = "numeric")

icp <- readxl::read_excel(
  "data/IC-ICP/IC-ICP-data-cleaned.xlsx", 
  sheet = 3)

icp.dl <- readxl::read_excel(
  "data/IC-ICP/IC-ICP-data-cleaned.xlsx",
  sheet = 4)


# Load auxillary field data (see 06_field_data.qmd for more analysis)

om23 <- readxl::read_excel("data/OM23_field_data.xlsx") |> 
  group_by(well) |> 
  mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  filter(
    !well %in% c("NSHQ14", "BA1D"), 
    depth %in% c(20, 150, 250, 270)) |> 
  mutate(
    well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  rename(sample_id = condition) |> 
  ungroup() |> 
  select(-c(`ORP (mV)`, temp.C))
```

### Load Color Palette and theme

```{r}
source("source/color_palettes.R")
source("source/theme_om23.R")
```

## Add metadata, LOQ, DL

Add the metadata:

```{r}
ic <- ic |> 
  mutate(
    well = case_when(
      str_detect(`Sample ID`, "BA1B") ~ "BA1B",
      str_detect(`Sample ID`, "BA3A") ~ "BA3A",
      str_detect(`Sample ID`, "BA4A") ~ "BA4A",
      str_detect(`Sample ID`, "BA1D") ~ "BA1D",
      TRUE ~ NA
    ),
    depth = case_when(
      str_detect(`Sample ID`, "-200") ~ 200,
      str_detect(`Sample ID`, "-20") ~ 20,
      str_detect(`Sample ID`, "150") ~ 150,
      str_detect(`Sample ID`, "250") ~ 250,
      str_detect(`Sample ID`, "270") ~ 270,
      str_detect(`Sample ID`, "275") ~ 275,
      str_detect(`Sample ID`, "120") ~ 120
    )
    ) |> 
  rename(sample_id = `Sample ID`)

icp <- icp |> 
  mutate(
    well = case_when(
      str_detect(`Sample Id`, "BA1B") ~ "BA1B",
      str_detect(`Sample Id`, "BA3A") ~ "BA3A",
      str_detect(`Sample Id`, "BA4A") ~ "BA4A",
      str_detect(`Sample Id`, "BA1D") ~ "BA1D",
      str_detect(`Sample Id`, "BA4B") ~ "BA4A", # change incorrect sample "4B"
      TRUE ~ NA
    ),
    depth = case_when(
      str_detect(`Sample Id`, "-200") ~ 200,
      str_detect(`Sample Id`, "-20") ~ 20,
      str_detect(`Sample Id`, "150") ~ 150,
      str_detect(`Sample Id`, "250") ~ 250,
      str_detect(`Sample Id`, "270") ~ 270,
      str_detect(`Sample Id`, "275") ~ 275,
      str_detect(`Sample Id`, "120") ~ 120
    ),
    ) |> 
  select(-`Sample Id`) |> 
  mutate(sample_id = paste0(well, "-", depth)) |> 
  select(sample_id, everything())
```

Add the LOQ to IC data:

```{r}
ic.long <- ic |> 
  pivot_longer(cols = -c(sample_id, depth, well), 
               values_to = "Concentration (mg/L)", 
               names_to = "compound") |> 
  # remove the mg/L in parentheses
  mutate(compound = str_replace_all(compound, "\\s*\\(.*?\\)", ""))

ic.loq.long <- ic.loq |> 
  pivot_longer(cols = everything(),
    values_to = "LOQ (mg/L)", 
    names_to = "compound") |> 
  # remove the mg/L in parentheses
  mutate(compound = str_replace_all(compound, "\\s*\\(.*?\\)", ""))

ic.complete <- ic.long |> 
  left_join(ic.loq.long, by = "compound") |> 
  mutate(
    quantifiable = case_when(
      is.na(`Concentration (mg/L)`) ~ FALSE,
      `Concentration (mg/L)` >= `LOQ (mg/L)` ~ TRUE,
      `Concentration (mg/L)` > `LOQ (mg/L)` ~ FALSE
      )
  ) |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  left_join(om23, by = c("sample_id", "well", "depth"))

```

Add Detection Limit to ICP data

```{r}
icp.long <- icp |> 
  select(-c(`Ar 420.069 - A (IS)`, `Sc 357.253 - A (IS)`, 
            `Sc 361.383 - R (IS)`)) |> 
  pivot_longer(cols = -c(sample_id, well, depth),
               values_to = "Concentration (mg/L)", 
               names_to = "compound") |> 
  mutate(
    compound = str_replace_all(compound, "\\s*\\(.*?\\)", "")
  )

icp.dl.long <- icp.dl |>  pivot_longer(
  cols = everything(),
  values_to = "DL (mg/L)", 
  names_to = "compound"
  ) |> 
  mutate(
    compound = str_replace_all(compound, "\\s*\\(.*?\\)", "")
  )

icp.complete <- icp.long |> 
  left_join(icp.dl.long, by = "compound") |> 
  mutate(
    quantifiable = case_when(
      is.na(`Concentration (mg/L)`) ~ FALSE,
      `Concentration (mg/L)` >= `DL (mg/L)` ~ TRUE,
      `Concentration (mg/L)` < `DL (mg/L)` ~ FALSE
      )
  ) |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  left_join(om23, by = c("sample_id", "well", "depth"))
```

## Plot

### Sulfate

```{r}
p_so4 <- ic.complete |> 
  filter(compound == "Sulfate") |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      fill = well,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_path(linewidth = 1.5) +
  scale_y_reverse() +
  scale_color_manual(values = well_palette) +
  labs(
    y = "Depth (mbs)",
    x = "Concentration (mg/L)",
    fill = "",
    title = latex2exp::TeX("Sulfate $(SO_{4}^{2-})$")
  ) +
  ggprism::theme_prism() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "None",
    aspect.ratio = 1
  )
p_so4
```

### Nitrate

```{r}
p_no3 <- ic.complete |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(compound == "Nitrate") |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      fill = well,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_path(linewidth = 1.5) +
  scale_y_reverse() +
  scale_color_manual(values = well_palette) +
  labs(
    x = "",
    y = "Concentration (mg/L)",
    fill = "",
    title = latex2exp::TeX("Nitrate $(SO_{4}^{2-})$")
  ) +
  ggprism::theme_prism() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = "None",
    aspect.ratio = 1
  )
p_no3
```

### Chloride

```{r}
p_cl <- ic.complete |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(compound == "Chloride") |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  #mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      fill = well,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_path(linewidth = 1.5) +
  scale_y_reverse(breaks = c(0, 20, 150, 250, 270)) +
  scale_color_manual(values = well_palette) +
  coord_cartesian(xlim = c(0, 420), ylim = c(270, 0)) +
  labs(
    y = "Depth (mbs)",
    x = "Concentration (mg/L)",
    fill = "",
    title = latex2exp::TeX("Chloride $(Cl^-)$")
  ) +
  ggprism::theme_prism() +
  theme(
    legend.position = "None",
    aspect.ratio = 1
  )
p_cl

legend <- cowplot::get_legend(
  # create some space to the left of the legend
  p_cl + theme(legend.position = "right", legend.box.margin = margin(0, 0, 0, 12))
)
```

### Iron

```{r}
p_fe <- icp.complete |> 
  filter(compound == "Fe 238.204 - A") |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  #mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      fill = well,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_vline(xintercept = 0.0004, color = "red") +
  geom_path(linewidth = 1.5) +
  scale_y_reverse(breaks = c(0, 20, 150, 250, 270)) +
  scale_x_log10() +
  scale_color_manual(values = well_palette) +
  #coord_cartesian(xlim = c(0, 0.6), ylim = c(270, 0)) +
  annotation_logticks(sides = "b") +
  labs(
    y = "Depth (mbs)",
    x = "Concentration (mg/L)",
    #fill = "",
    title = latex2exp::TeX("Total Iron $(Fe_T)$")
  ) +
  theme_bw() +
  theme(
    legend.position = "bottom",
    aspect.ratio = 1
  )
p_fe
```

### Calcium

```{r}
p_ca <- icp.complete |> 
  filter(compound == "Ca 317.933 - A") |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  #mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      fill = well,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_path(linewidth = 1.5) +
  scale_y_reverse(breaks = c(0, 20, 150, 250, 270)) +
  scale_color_manual(values = well_palette) +
  coord_cartesian(xlim = c(0, 250), ylim = c(270, 0)) +
  labs(
    y = "Depth (mbs)",
    x = "Concentration (mg/L)",
    fill = "",
    title = latex2exp::TeX("Calcium $(Ca^{2+})$")
  ) +
  ggprism::theme_prism() +
  theme(
    legend.position = "None",
    aspect.ratio = 1
  )
p_ca
```

### Ca vs. pH

```{r}
p_ca_pH <- icp.complete |> 
  filter(compound == "Ca 317.933 - A") |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  # calculate molality
  mutate(molality = (`Concentration (mg/L)` / 28.0855) / 1000) |> 
  mutate(logca_molal = log10(molality)) |> 
  ggplot(
    aes(
      y = pH,
      x = logca_molal,
      color = well,
      shape = as.factor(depth)
    )
  ) +
  geom_point(size = 3) + 
  scale_color_manual(values = well_palette) +
  scale_shape_manual(values = c(0, 2, 1, 16)) +
  #coord_cartesian(xlim = c(-5, -3.5)) +
  scale_x_continuous() +
  coord_cartesian(xlim = c(-4, -2), ylim = c(7.5, 12)) +
  theme_om23() +
  labs(
    shape = "Depth (mbs)",
    color = "Well",
    x = "Ca (log m)"
  ) +
  ggprism::annotation_ticks(sides = "tblr") +
  theme(
    axis.ticks = element_blank(),
    panel.grid.major = element_blank(),
    legend.position = "left",
    aspect.ratio = 1,
    
  )
p_ca_pH

cowplot::save_plot(
  filename = "fig_output/ca_vs_pH.pdf",
  plot = p_ca_pH,
  base_height = 4,
  base_width = 5
)

cowplot::save_plot(
  filename = "fig_output/ca_vs_pH.png",
  plot = p_ca_pH,
  base_height = 4,
  base_width = 5
)
```

### Si

```{r}
p_si <- icp.complete |> 
  filter(compound == "Si 251.611 - A") |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  group_by(well) |> 
  #mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      y = depth,
      x = `Concentration (mg/L)`,
      color = well
    )
  ) +
  geom_point(size = 3) +
  geom_path(linewidth = 1.5) +
  scale_y_reverse(breaks = c(0, 20, 150, 250, 270)) +
  #scale_x_log10() +
  #annotation_logticks(sides = "b") +
  scale_color_manual(values = well_palette) +
  coord_cartesian(xlim = c(0.45, 0.65), ylim = c(270, 0)) +
  scale_x_continuous(breaks = seq(0.45, 0.65, by = 0.025)) +
  labs(
    y = "Depth (mbs)",
    x = "Concentration (mg/L)",
    fill = "",
    title = latex2exp::TeX("$Si$")
  ) +
  ggprism::theme_prism() +
  ggprism::annotation_ticks() +
  theme(
    #legend.position = "None",
    aspect.ratio = 1,
    axis.ticks.length.x = unit(0, "cm"),
    axis.text.x = element_text(size = 8)
  )
p_si
```

### Si vs. pH

Convert to molality as follows:

$$
m (mol/kg) = \frac{Concentration \space (mg/L)}{Si MW \space (g/mol)} \times \frac{1}{1000}
$$

Where SiMW is the molecular weight of Silicon: 28.0855 g/mol.

```{r}
p_si_pH <- icp.complete |> 
  filter(compound == "Si 251.611 - A") |> 
  mutate(well = factor(well, levels = c("BA1B", "BA4A", "BA3A"))) |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  # calculate molality
  mutate(molality = (`Concentration (mg/L)` / 28.0855) / 1000) |> 
  mutate(logsi_molal = log10(molality)) |> 
  ggplot(
    aes(
      y = pH,
      x = logsi_molal,
      color = well,
      shape = as.factor(depth)
    )
  ) +
  geom_point(size = 3) + 
  scale_color_manual(values = well_palette) +
  scale_shape_manual(values = c(0, 2, 1, 16)) +
  coord_cartesian(xlim = c(-5, -3.5)) +
  scale_x_continuous() +
  theme_om23() +
  labs(
    shape = "Depth (mbs)",
    color = "Well",
    x = "Si (log m)"
  ) +
  ggprism::annotation_ticks(sides = "tblr") +
  theme(
    axis.ticks = element_blank(),
    panel.grid.major = element_blank(),
    legend.position = "left"
  )
p_si_pH

p_si_pH_w_box <- p_si_pH %+% annotate(geom = "rect", xmin = -4.8, xmax = -4.6, ymin = 9, ymax = 12, color = "gray", fill = NA, alpha = 0.2)
p_si_pH_w_box

p_si_pH_zoom <- p_si_pH %+%
  coord_cartesian(xlim = c(-4.8, -4.6), ylim = c(9, 12)) %+%
  theme(legend.position = "None", aspect.ratio = 1)
p_si_pH_zoom

p_si_pH_combined <- cowplot::plot_grid(p_si_pH_w_box, p_si_pH_zoom, rel_widths = c(0.7, 0.3),
                                       labels = c("A", "B"))

cowplot::save_plot(
  filename = "fig_output/si_vs_pH.pdf",
  plot = p_si_pH_combined,
  base_height = 5,
  base_width = 8
)
```

### Cowplot Major Ions

```{r}
p_major_ions <- cowplot::plot_grid(p_so4, p_cl, p_ca, p_fe, p_ca, p_si, nrow = 2)
p_major_ions

cowplot::save_plot(
  filename = "fig_output/major_ions.pdf",
  plot = p_major_ions,
  base_height = 7,
  base_width = 11
)
```

### Cations

```{r}
p_cations <- icp.complete |> 
  filter(well != "BA1D") |> 
  filter(!depth %in% c(200, 275)) |> 
  mutate(condition = paste(well, depth)) |> 
  mutate(`Concentration (mg/L)` = if_else(
    quantifiable,
    true = `Concentration (mg/L)`,
    false = 0
  )) |>
  group_by(well) |> 
  mutate(condition = fct_reorder(.f = condition, .x = depth)) |> 
  ggplot(
    aes(
      x = condition,
      y = `Concentration (mg/L)`,
      fill = well
    )
  ) +
  geom_col() +
  scale_y_continuous(expand = c(0,0)) +
  facet_wrap(vars(compound), scales = "free") +
  scale_fill_manual(values = well_palette) +
  labs(
    x = "",
    y = "Concentration (mg/L)",
    fill = "",
    title = "Cations",
    caption = "Values below detection limit omitted"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 6),
    legend.position = "None"
  )
p_cations

cowplot::save_plot(
  filename = "fig_output/all_cations.pdf",
  plot = p_cations,
  base_height = 20,
  base_width = 24
)
```

# Export

Field data

```{r}
om23 |> 
  arrange(well, depth) |> 
  rename(`sampling depth` = depth) |> 
  writexl::write_xlsx(
  path = "data_output/field_data.xlsx"
)

om23 |> 
  arrange(well, depth) |> 
  rename(`sampling depth` = depth) |> 
  gt::gt(rowname_col = c("well")) |> 
  gt::data_color(columns = "pH", palette = "Greens") |> 
  gt::data_color(columns = "conductivity (µS/cm)", palette = "Blues") |> 
  gt::data_color(columns = "depth to water table (m)", palette = "Oranges")
```

Anions

```{r}
ic |> 
  filter(well != "BA1D") |> 
  filter(!str_detect(sample_id, "OM20")) |> 
  select(well, depth, sample_id, everything()) |> 
  arrange(well, depth) |> 
  writexl::write_xlsx(path = "data_output/anion_data.xlsx")

ic |> 
  filter(well != "BA1D") |> 
  filter(!str_detect(sample_id, "OM20")) |> 
  select(well, depth, sample_id, everything()) |> 
  arrange(well, depth) |> 
  rename(`sampling depth` = depth) |> 
  gt::gt(rowname_col = c("well")) |> 
  gt::data_color(columns = "Chloride (mg-Cl/L)", palette = "Blues") |> 
  gt::data_color(columns = "Sulfate (mg-SO4/L)", palette = "Oranges") |> 
  gt::data_color(columns = "Nitrate (mg-NO3/L)", palette = "Reds")
```

Cations

```{r}
icp |> 
  filter(!str_detect(sample_id, "BA1D"), !depth %in% c(200, 275)) |> 
  select(well, depth, sample_id, 
         `Ca 317.933 - A\r\n(mg/L)`, `Fe 238.204 - A\r\n(mg/L)`,
         `Mg 285.213 - R\r\n(mg/L)`, `S 180.669 - A\r\n(mg/L)`,
         `Si 251.611 - A\r\n(mg/L)`, `P 177.434 - A\r\n(mg/L)`
         ) |> 
  arrange(well, depth) |> 
  gt::gt(rowname_col = "well") |> 
  gt::data_color(columns = !c("depth", "sample_id"), palette = "Blues", direction = "column") |> 
  gt::fmt_number(decimals = 3)

icp |> 
  filter(!str_detect(sample_id, "BA1D")) |> 
  select(well, depth, sample_id, everything()) |> 
  arrange(well, depth) |> 
  writexl::write_xlsx(
    path = "data_output/cation_data.xlsx"
  )
```
